<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="priv.zhou.module.system.role.domain.dao.RoleDAO">

    <resultMap id="POMap" type="RolePO">
        <id column="id" property="id"/>
        <result column="key" property="key"/>
        <result column="name" property="name"/>
        <result column="state" property="state"/>
        <result column="remark" property="remark"/>
        <result column="create_by" property="createBy"/>
        <result column="modified_by" property="modifiedBy"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
        <result column="is_deleted" property="deleted"/>
    </resultMap>

    <resultMap id="BOMap" type="RoleBO">
        <id column="id" property="id"/>
        <result column="key" property="key"/>
        <result column="name" property="name"/>
        <result column="state" property="state"/>
        <result column="remark" property="remark"/>
        <result column="create_by" property="createBy"/>
        <result column="modified_by" property="modifiedBy"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
        <collection property="menus"  ofType="MenuPO">
            <id column="menu_id" property="id"/>
            <result column="menu_name" property="name" />
        </collection>
    </resultMap>

    <resultMap id="VOMap" type="RoleVO">
        <id column="id" property="id"/>
        <result column="key" property="key"/>
        <result column="name" property="name"/>
        <result column="state" property="state"/>
        <result column="remark" property="remark"/>
        <collection property="menus" ofType="MenuSelectVO">
            <id column="menu_id" property="id"/>
            <result column="menu_parent_id" property="parentId"/>
            <result column="menu_name" property="name" />
        </collection>
    </resultMap>

    <resultMap id="TableVOMap" type="RoleTableVO">
        <id column="id" property="id"/>
        <result column="key" property="key"/>
        <result column="name" property="name"/>
        <result column="state" property="state"/>
        <result column="remark" property="remark"/>
        <result column="relate_count" property="relateCount"/>
    </resultMap>

    <resultMap id="SelectVOMap" type="RoleSelectVO">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
    </resultMap>

    <sql id="POSql">
        SELECT
            id,
            `key`,
            `name`,
            state,
            remark,
            create_by,
            modified_by,
            gmt_create,
            gmt_modified,
            is_deleted
        FROM system_role
    </sql>

    <insert id="save" parameterType="RolePO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO system_role(
            `key`,
            `name`,
            state,
            remark,
            create_by,
            gmt_create,
            is_deleted
        )VALUES(
            #{key},
            #{name},
            #{state},
            #{remark},
            #{createBy},
	        NOW(),
            0
        )
    </insert>

    <delete id="removeList" parameterType="String">
        update system_role set is_deleted = 1
        where is_deleted = 0 and `key` in
        <foreach item="key" collection="list" open="(" separator="," close=")">
            #{key}
        </foreach>
    </delete>

    <update id="update" parameterType="RolePO">
        update system_role
        <set>
            <if test="name != null and name != ''">`name` = #{name},</if>
            <if test="state != null ">state = #{state},</if>
            <if test="remark != null and remark != ''">remark = #{remark},</if>
            modified_by = #{modifiedBy},
            gmt_modified = NOW()
        </set>
        where id = #{id}
    </update>

    <select id="get" parameterType="RoleQuery" resultMap="POMap">
        <include refid="POSql"/>
        <where>
            is_deleted = 0
            <if test="id != null"> AND id = #{id}</if>
            <if test="key != null and key != ''"> AND `key` = #{key}</if>
        </where>
    </select>

    <select id="getBO" parameterType="RoleQuery" resultMap="BOMap">
        SELECT
            role.id,
            role.`key`,
            role.`name`,
            role.state,
            role.remark,
            role.create_by,
            role.gmt_create,
            role.modified_by,
            role.gmt_modified,
            menu.id AS menu_id,
            menu.`name` AS menu_name
        FROM system_role AS role
        LEFT JOIN system_role_menu AS role_menu ON role.id = role_menu.role_id  and role.key != 'root'
        LEFT JOIN system_menu AS menu ON role_menu.menu_id = menu.id
        <where>
            role.is_deleted = 0
            <if test="id != null"> AND role.id = #{id}</if>
            <if test="key != null and key != ''"> AND role.`key` = #{key}</if>
        </where>
    </select>

    <select id="getVO" parameterType="RoleQuery" resultMap="VOMap">
        SELECT
            role.id,
            role.`key`,
            role.`name`,
            role.state,
            role.remark,
            menu.id AS menu_id,
            menu.parent_id AS menu_parent_id,
            menu.`name` AS menu_name
        FROM system_role AS role
        LEFT JOIN system_role_menu AS role_menu ON role.id = role_menu.role_id and role.key != 'root'
        LEFT JOIN system_menu AS menu ON role_menu.menu_id = menu.id
        <where>
            role.is_deleted = 0
            <if test="id != null"> AND role.id = #{id}</if>
            <if test="key != null and key != ''"> AND role.`key` = #{key}</if>
        </where>
    </select>

    <select id="list" parameterType="RoleQuery" resultMap="POMap">
        <include refid="POSql"/>
        <where>
            is_deleted = 0
            <if test="name != null and name != ''"> AND `name` = #{name}</if>
            <if test="state != null"> AND state = #{state}</if>
            <if test="remark != null and remark != ''"> AND remark = #{remark}</if>
            <if test="createBy != null"> AND create_by = #{createBy}</if>
        </where>
    </select>

    <select id="listTableVO" parameterType="RoleQuery" resultMap="TableVOMap">
        SELECT
            id,
            `key`,
            `name`,
            state,
            remark,
            (select count(0) from system_user_role where role_id = id) AS relate_count
        FROM system_role
        <where>
            is_deleted = 0
            <if test="state != null">and state = #{state} </if>
            <if test="keyLike != null and keyLike != ''">and `key` LIKE CONCAT('%',#{keyLike},'%')</if>
            <if test="nameLike != null and nameLike != ''">and `name` LIKE CONCAT('%',#{nameLike},'%')</if>
        </where>
    </select>

    <select id="listSelectVO" parameterType="RoleQuery" resultMap="SelectVOMap">
        SELECT
            id,
            `name`
        FROM system_role
        <where>
            is_deleted = 0
            <if test="state != null">and state = #{state} </if>
        </where>
    </select>

    <select id="count" parameterType="RoleQuery" resultType="integer">
        SELECT
        COUNT( 0 )
        FROM
        system_role
        <where>
            is_deleted = 0
            <if test="ridId != null ">and id != #{ridId}</if>
            <if test="name != null and name != ''">and `name` = #{name}</if>
            <if test="key != null and key != ''">and `key` = #{key}</if>
        </where>
    </select>

    <select id="keySet" parameterType="Integer" resultType="String">
        SELECT
            `key`
        FROM system_role
        LEFT JOIN system_user_role ON system_role.id = system_user_role.role_id AND system_role.is_deleted = 0
        WHERE state = 0 AND system_user_role.user_id = #{value}
    </select>

</mapper>
