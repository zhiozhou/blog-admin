<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="priv.zhou.module.system.extend.domain.dao.TableDAO">

    <resultMap id="TableVOMap" type="TableTableVO">
        <result column="table_name" property="name"/>
        <result column="table_comment" property="comment"/>
        <result column="create_time" property="gmtCreate"/>
    </resultMap>

    <resultMap id="BOMap" type="TableBO">
        <result column="table_name" property="name"/>
        <result column="table_comment" property="comment"/>
        <collection property="columnList" column="table_name" select="listColumnBO"/>
    </resultMap>

    <resultMap id="ColumnBOMap" type="ColumnBO">
        <result column="column_key" property="key"/>
        <result column="column_name" property="name"/>
        <result column="data_type" property="type"/>
        <result column="column_comment" property="comment"/>
        <result column="is_nullable" property="nullable"/>
    </resultMap>

    <select id="listTableVO" parameterType="TableQuery" resultMap="TableVOMap">
        SELECT
        table_name,
        table_comment,
        create_time
        FROM information_schema.TABLES
        WHERE table_schema = ( SELECT DATABASE ())
        <if test="nameLike != null and nameLike != ''">and table_name LIKE CONCAT('%',#{nameLike},'%')</if>
    </select>

    <select id="listBO" parameterType="TableQuery" resultMap="BOMap">
        SELECT
        table_name,
        table_comment
        FROM information_schema.TABLES
        WHERE table_schema = ( SELECT DATABASE ())
        AND table_name in
        <foreach collection="inNames" index="index" item="name" open="(" separator="," close=")">
            #{name}
        </foreach>
    </select>

    <select id="listColumnBO" parameterType="String" resultMap="ColumnBOMap">
        SELECT
            column_key,
            column_name ,
            data_type,
            column_comment,
            is_nullable
        FROM information_schema.COLUMNS
        WHERE table_name = #{tableName}
        AND table_schema = (
            SELECT DATABASE ())
        ORDER BY  ordinal_position
    </select>

</mapper>
