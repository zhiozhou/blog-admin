<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="priv.zhou.module.system.user.domain.dao.UserDAO">

    <resultMap id="userMap" type="UserPO">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="salt" property="salt"/>
        <result column="name" property="name"/>
        <result column="state" property="state"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
        <association property="role" javaType="RolePO">
            <id column="role_id" property="id"/>
            <result column="role_name" property="name"/>
        </association>
    </resultMap>

    <insert id="save" parameterType="UserPO"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO system_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
             username ,
             password ,
             salt ,
             name ,
             state ,
            gmt_create,
            gmt_modified
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{username} ,
            #{password} ,
            #{salt} ,
            #{name} ,
            #{state} ,
            NOW(),
            NOW()
        </trim>
    </insert>

    <insert id="saveRole" parameterType="UserPO">
        insert system_user_role(user_id,role_id) values(#{id},#{role.id})
    </insert>


    <delete id="removeRole" parameterType="userDTO">
        delete from system_user_role where user_id = #{id}
    </delete>


    <update id="update" parameterType="UserPO">
        UPDATE system_user
        <set>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="state != null">state = #{state},</if>
            gmt_modified = NOW()
        </set>
        WHERE id = #{id}
    </update>


    <sql id="selectSQL">
        SELECT
            system_user.id,
            username,
            password,
            salt,
            system_user.name,
            system_user.state,
            system_user.gmt_create,
            system_user.gmt_modified,
            system_role.id role_id,
            system_role.name role_name
        FROM
            system_user
            LEFT JOIN system_user_role ON system_user.id = system_user_role.user_id
            LEFT JOIN system_role ON system_user_role.role_id = system_role.id
    </sql>

    <select id="get" parameterType="UserDTO" resultMap="userMap">
        <include refid="selectSQL"/>
        <where>
            <if test="id != null  "> and system_user.id = #{id}</if>
            <if test="state != null  "> and system_user.state = #{state}</if>
            <if test="username != null  and username != '' "> and system_user.username = #{username}</if>
        </where>
    </select>


    <select id="list" parameterType="UserDTO" resultMap="userMap">
        <include refid="selectSQL"/>
        <where>
            <if test="exclId != null ">and system_user.id != #{exclId}</if>
            <if test="name != null  and name != '' "> and system_user.name = #{name}</if>
            <if test="nameLike != null and nameLike != ''">and system_user.name LIKE CONCAT('%',#{nameLike},'%')</if>
            <if test="username != null  and username != '' "> and system_user.username = #{username}</if>
            <if test="state != null  "> and system_user.state = #{state}</if>
            <if test="role != null and role.id != null "> and system_role.id = #{role.id}</if>
            <if test="role != null and role.key != null "> and system_role.key = #{role.key}</if>
        </where>
        ORDER BY system_user.state asc,system_user.id DESC
    </select>


    <select id="count" parameterType="UserDTO" resultType="Integer">
        SELECT
        count(0)
        FROM
        system_user
        LEFT JOIN system_user_role ON system_user.id = system_user_role.user_id
        <where>
            <if test="exclId != null ">and system_user.id != #{exclId}</if>
            <if test="name != null  and name != '' "> and system_user.name = #{name}</if>
            <if test="nameLike != null and nameLike != ''">and system_user.name LIKE CONCAT('%',#{nameLike},'%')</if>
            <if test="username != null  and username != '' "> and system_user.username = #{username}</if>
            <if test="state != null  "> and system_user.state = #{state}</if>
            <if test="role != null and role.id != null "> and system_role.id = #{role.id}</if>
            <if test="role != null and role.key != null "> and system_role.key = #{role.key}</if>
        </where>
    </select>
</mapper>
