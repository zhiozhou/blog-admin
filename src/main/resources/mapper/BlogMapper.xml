<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="priv.zhou.module.blog.domain.dao.BlogDAO">

    <resultMap id="blogMap" type="BlogPO">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="preview" property="preview"/>
        <result column="state" property="state"/>
        <result column="remark" property="remark"/>
        <result column="abs" property="abs"/>
        <result column="pv" property="pv"/>
        <result column="gmt_create" property="gmtCreate"/>
        <collection property="tags"  ofType="TagPO">
            <result column="tag_id" property="id"/>
            <result column="tag_name" property="name"/>
            <result column="tag_count" property="count"/>
        </collection>
    </resultMap>


    <insert id="save" parameterType="BlogPO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO blog_blog(
             title , 
             content , 
             preview , 
             state , 
             remark , 
             abs ,
             pv ,
             create_id ,
             gmt_create , 
             gmt_modified 
        )
        VALUES(
            #{title} , 
            #{content} , 
            #{preview} , 
            #{state} , 
            #{remark} , 
            #{abs} ,
            #{pv} ,
            #{createId} ,
            NOW() ,
            NOW()
        )
    </insert>

    <update id="update" parameterType="BlogPO">
        UPDATE blog_blog
        <set>
            <if test="title != null and title != ''">title = #{title},</if>
            <if test="content != null and content != ''">content = #{content},</if>
            <if test="preview != null and preview != ''">preview = #{preview},</if>
            <if test="state != null and state != ''">state = #{state},</if>
            <if test="remark != null and remark != ''">remark = #{remark},</if>
            <if test="abs != null and abs != ''">abs = #{abs},</if>
            <if test="pv != null and pv != ''">pv = #{pv},</if>
            gmt_modified = NOW()
        </set>
        WHERE id = #{id}
    </update>


    <select id="get" parameterType="BlogDTO" resultMap="blogMap">
        SELECT
            blog_blog.id,
            title,
            content,
            preview,
            state,
            remark,
            abs,
            pv,
            blog_blog.gmt_create,
            blog_tag.id tag_id,
            blog_tag.name tag_name,
            blog_tag.count tag_count
        FROM
            blog_blog
            LEFT JOIN blog_tag_map ON blog_blog.id = blog_tag_map.blog_id
            LEFT JOIN blog_tag ON blog_tag_map.tag_id = blog_tag.id
        WHERE
            blog_blog.id = #{id}
    </select>


    <select id="list" parameterType="BlogDTO" resultType="BlogPO">
        SELECT
        id ,
        title ,
        state ,
        remark ,
        pv,
        gmt_create
        FROM blog_blog
        <where>
            <if test="titleLike != null and titleLike != ''">and title LIKE CONCAT('%',#{titleLike},'%')</if>
            <if test="state != null  ">and state = #{state}</if>
            <if test="remarkLike != null  and remarkLike != '' ">and remark LIKE CONCAT('%',#{remarkLike},'%')</if>
        </where>
        ORDER BY id DESC
    </select>


    <select id="count" parameterType="BlogDTO" resultType="Integer">
        SELECT
        count(0)
        FROM
        blog_blog
        <where>
            <if test="exclId != null  ">and id != #{exclId}</if>
            <if test="title != null  and title != '' ">and title = #{title}</if>
        </where>
    </select>
</mapper>
